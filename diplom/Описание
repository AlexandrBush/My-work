Дипломная работа:
Сравнение различных библиотек для машинного обучения: scikit-learn, TensorFlow и PyTorch

Аннотация
В данной работе рассматривается сравнение трех популярных библиотек для машинного обучения: scikit-learn ,
TensorFlow и PyTorch .
Мы исследуем их возможности на задачах классификации и регрессии, оценивая производительность, удобство использования,
гибкость и масштабируемость.
Работа включает практическую реализацию алгоритмов с использованием каждой из библиотек, анализ результатов
и выводы о преимуществах и недостатках каждого инструмента.

Содержание

1. Введение
2. Теоретическая часть
    2.1. Обзор библиотек
    2.2. Задачи машинного обучения: классификация и регрессия
3. Практическая часть
    3.1. Реализация задачи классификации
    3.2. Реализация задачи регрессии
    3.3. Оценка производительности
4. Анализ и сравнение
5. Выводы
6. Заключение


1. Введение
Машинное обучение является одной из наиболее динамично развивающихся областей современных технологий.
Для его реализации существует множество инструментов и библиотек, каждая из которых имеет свои особенности,
преимущества и ограничения. В данной работе мы сосредоточимся на трех ключевых библиотеках: scikit-learn , TensorFlow и PyTorch .

    scikit-learn — это простая и эффективная библиотека для традиционных методов машинного обучения.
    TensorFlow — мощный фреймворк для глубокого обучения, разработанный Google.
    PyTorch — гибкий фреймворк для глубокого обучения, созданный Facebook.

Цель работы — сравнить эти библиотеки по следующим критериям:

    Удобство использования;
    Производительность;
    Гибкость и масштабируемость.

Для этого мы реализуем задачи классификации и регрессии с использованием всех трех библиотек,
проведем эксперименты и проанализируем результаты.


2. Теоретическая часть
2.1. Обзор библиотек
2.1.1. Scikit-learn
Scikit-learn — это одна из самых популярных библиотек для машинного обучения, основанная на Python.
Она предоставляет широкий спектр алгоритмов для решения задач классификации, регрессии, кластеризации
и снижения размерности. Библиотека отличается простотой использования, хорошо документирована и идеально подходит для начинающих.

Преимущества:
Простота использования;
Большое количество предварительно реализованных алгоритмов;
Хорошая интеграция с другими библиотеками Python (например, NumPy и Pandas).

Недостатки:
Нет нативной поддержки GPU;
Не предназначена для сложных моделей глубокого обучения.

2.1.2. TensorFlow
TensorFlow — это открытый фреймворк для глубокого обучения, разработанный Google. Он позволяет строить сложные модели
нейронных сетей, используя граф вычислений. TensorFlow поддерживает как CPU, так и GPU, а также обладает возможностями
для распределенного обучения.

Преимущества:
Масштабируемость;
Поддержка GPU и TPU;
Широкие возможности для создания сложных моделей.

Недостатки:
Сложность использования для новичков;
Требует дополнительных усилий для настройки и оптимизации.

2.1.3. PyTorch
PyTorch — это еще один популярный фреймворк для глубокого обучения, разработанный Facebook. Он известен своей гибкостью
 и удобством использования благодаря динамическому графу вычислений.

Преимущества:
Легкость использования;
Гибкость при создании моделей;
Хорошая поддержка сообщества.

Недостатки:
Меньше готовых решений, чем в TensorFlow;
Менее развитые инструменты для деплоя моделей.

2.2. Задачи машинного обучения: классификация и регрессия

Классификация
Задача классификации заключается в том, чтобы отнести объект к одной из заранее заданных категорий. Например,
определение типа цветка на основе его характеристик.

Регрессия
Задача регрессии состоит в предсказании числового значения. Например, прогнозирование стоимости дома
 на основе его площади, местоположения и других факторов.

3. Практическая часть в файле "Diplom.py"

4. Анализ и сравнение в файле "Анализ и сравнение.png"

5. Выводы
Scikit-learn отлично подходит для быстрого прототипирования и решения стандартных задач машинного обучения.
TensorFlow и PyTorch обеспечивают высокую производительность и гибкость, но требуют большего времени на освоение.
Выбор библиотеки зависит от конкретных задач и требований проекта.

6. Заключение
В данной работе мы провели детальное сравнение трех популярных библиотек для машинного обучения. На практике каждая
из них имеет свои сильные стороны, и выбор между ними должен основываться на специфике задачи и предпочтениях разработчика.